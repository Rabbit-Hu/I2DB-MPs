==== Test Stage 0 ====
  Functions to test: 
  - ConnectDatabase()
  - InsertStudent()
  - InsertCourse()
======================
[Operation Log] Successfully connected to the database.
[Operation Log] Inserting student (ID=82, Name=RabbitHu, Age=19, Dept=CS)...Successful.
[Operation Log] Inserting student (ID=83, Name=GXZlegend, Age=18, Dept=AI)...Successful.
[Operation Log] Inserting student (ID=82, Name=Xiaodi Yuan, Age=19, Dept=AI)...Failed to insert: student's ID 82 is used.
[Operation Log] Inserting student (ID=84, Name=Han Wang, Age=19, Dept=AI)...Successful.
--- Table "Student" ---
(82, 'RabbitHu', 19, 'CS')
(83, 'GXZlegend', 18, 'AI')
(84, 'Han Wang', 19, 'AI')
[Operation Log] Inserting Course (ID=101, Name=Machine Learning, Capacity=2, CreditHour=4, Requirement=<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>)...Successful.
[Operation Log] Inserting Course (ID=102, Name=Intro to CS, Capacity=2, CreditHour=3, Requirement=<Req><Dept>CS</Dept><Dept>AI</Dept></Req>)...Successful.
[Operation Log] Inserting Course (ID=103, Name=Intro to AI, Capacity=3, CreditHour=3, Requirement=<Req><Dept>AI</Dept><Dept>CS</Dept></Req>)...Successful.
[Operation Log] Inserting Course (ID=104, Name=C++, Capacity=3, CreditHour=4, Requirement=<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>)...Successful.
[Operation Log] Inserting Course (ID=105, Name=Python, Capacity=3, CreditHour=3, Requirement=<Req><Dept>AI</Dept><Dept>CS</Dept></Req>)...Successful.
[Operation Log] Inserting Course (ID=106, Name=Intro to DB, Capacity=3, CreditHour=2, Requirement=<Req>
    <PrerequisiteCourse>104</PrerequisiteCourse>
    <PrerequisiteCourse>105</PrerequisiteCourse>
    <Dept>CS</Dept>
    <Dept>AI</Dept>
    </Req>)...Successful.
[Operation Log] Inserting Course (ID=103, Name=Roads to Academic, Capacity=320, CreditHour=3, Requirement=)...Failed to insert: courseID 103 is used.
Successful.
--- Table "Course" ---
(101, 'Machine Learning', 2, 2, 4, '<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>')
(102, 'Intro to CS', 2, 2, 3, '<Req><Dept>CS</Dept><Dept>AI</Dept></Req>')
(103, 'Intro to AI', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(104, 'C++', 3, 3, 4, '<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
(105, 'Python', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(106, 'Intro to DB', 3, 3, 2, '<Req><PrerequisiteCourse>104</PrerequisiteCourse><PrerequisiteCourse>105</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')

==== Test Stage 1 ====
  Functions to test: 
  - RegisterCourse()
  - UpdateGrade()
  - RetrieveAcademicHistory()
  - RetrieveFailureHistory()
  - ComputeGPA()
======================
[Operation Log] Registering student 82 to course 102...Successful.
[Operation Log] Successfully updated student 82's grade for course 102 to 88.
[Operation Log] Registering student 82 to course 104...Successful.
[Operation Log] Successfully updated student 82's grade for course 104 to 95.
[Operation Log] Registering student 82 to course 105...Successful.
[Operation Log] Registering student 82 to course 106...Failed to register: The student has not taken the prerequisite course 105.
[Operation Log] Successfully updated student 82's grade for course 105 to 92.
[Operation Log] Registering student 82 to course 106...Successful.
[Operation Log] Successfully updated student 82's grade for course 106 to 59.
[Operation Log] Registering student 82 to course 101...Failed to register: Students from department CS cannot take this course.
Academic History of student 82: [102, 104, 105, 106]
(StudentID, CourseID) pairs of failure records: [(82, 106)]
GPA of student 82: 86.5
--- Table "Student" ---
(82, 'RabbitHu', 19, 'CS')
(83, 'GXZlegend', 18, 'AI')
(84, 'Han Wang', 19, 'AI')
--- Table "Course" ---
(101, 'Machine Learning', 2, 2, 4, '<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>')
(102, 'Intro to CS', 2, 1, 3, '<Req><Dept>CS</Dept><Dept>AI</Dept></Req>')
(103, 'Intro to AI', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(104, 'C++', 3, 1, 4, '<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
(105, 'Python', 3, 1, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(106, 'Intro to DB', 3, 1, 2, '<Req><PrerequisiteCourse>104</PrerequisiteCourse><PrerequisiteCourse>105</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
--- Table "Course_registration" ---
(82, 102, 88.0)
(82, 104, 95.0)
(82, 105, 92.0)
(82, 106, 59.0)

==== Test Stage 2 ====
  Functions to test: 
  - RegisterCourse() (Capacity restriction)
  - ComputeAverageGrade()
======================
[Operation Log] Registering student 83 to course 102...Successful.
[Operation Log] Successfully updated student 83's grade for course 102 to 99.
Average grade of course 102: 93.5
[Operation Log] Registering student 84 to course 102...Failed to register: The course has no enough capacity.
Academic History of student 84: []
--- Table "Student" ---
(82, 'RabbitHu', 19, 'CS')
(83, 'GXZlegend', 18, 'AI')
(84, 'Han Wang', 19, 'AI')
--- Table "Course" ---
(101, 'Machine Learning', 2, 2, 4, '<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>')
(102, 'Intro to CS', 2, 0, 3, '<Req><Dept>CS</Dept><Dept>AI</Dept></Req>')
(103, 'Intro to AI', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(104, 'C++', 3, 1, 4, '<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
(105, 'Python', 3, 1, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(106, 'Intro to DB', 3, 1, 2, '<Req><PrerequisiteCourse>104</PrerequisiteCourse><PrerequisiteCourse>105</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
--- Table "Course_registration" ---
(82, 102, 88.0)
(82, 104, 95.0)
(82, 105, 92.0)
(82, 106, 59.0)
(83, 102, 99.0)

==== Test Stage 3 ====
  Functions to test: 
  - DeleteStudent()
  - EnrolledStudent()
  - DeleteCourse()
======================
--- Table "Student" ---
(82, 'RabbitHu', 19, 'CS')
(83, 'GXZlegend', 18, 'AI')
(84, 'Han Wang', 19, 'AI')
--- Table "Course" ---
(101, 'Machine Learning', 2, 2, 4, '<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>')
(102, 'Intro to CS', 2, 0, 3, '<Req><Dept>CS</Dept><Dept>AI</Dept></Req>')
(103, 'Intro to AI', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(104, 'C++', 3, 1, 4, '<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
(105, 'Python', 3, 1, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(106, 'Intro to DB', 3, 1, 2, '<Req><PrerequisiteCourse>104</PrerequisiteCourse><PrerequisiteCourse>105</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
--- Table "Course_registration" ---
(82, 102, 88.0)
(82, 104, 95.0)
(82, 105, 92.0)
(82, 106, 59.0)
(83, 102, 99.0)
[Operation Log] Successfully deleted student 83.
--- Table "Student" ---
(82, 'RabbitHu', 19, 'CS')
(84, 'Han Wang', 19, 'AI')
--- Table "Course" ---
(101, 'Machine Learning', 2, 2, 4, '<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>')
(102, 'Intro to CS', 2, 1, 3, '<Req><Dept>CS</Dept><Dept>AI</Dept></Req>')
(103, 'Intro to AI', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(104, 'C++', 3, 1, 4, '<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
(105, 'Python', 3, 1, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(106, 'Intro to DB', 3, 1, 2, '<Req><PrerequisiteCourse>104</PrerequisiteCourse><PrerequisiteCourse>105</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
--- Table "Course_registration" ---
(82, 102, 88.0)
(82, 104, 95.0)
(82, 105, 92.0)
(82, 106, 59.0)
[Operation Log] Registering student 84 to course 102...Successful.
[Operation Log] Updating capacity of course 102 to 1...Failed to update capacity: The new capacity is less than the number of students registered for this course.
[Operation Log] Successfully deleted student 84 from course 102.
[Operation Log] Updating capacity of course 102 to 1...Successful.
1 students have enrolled in course 102.
[Operation Log] Successfully deleted course 102.
--- Table "Student" ---
(82, 'RabbitHu', 19, 'CS')
(84, 'Han Wang', 19, 'AI')
--- Table "Course" ---
(101, 'Machine Learning', 2, 2, 4, '<Req><PrerequisiteCourse>105</PrerequisiteCourse><Dept>AI</Dept></Req>')
(103, 'Intro to AI', 3, 3, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(104, 'C++', 3, 1, 4, '<Req><PrerequisiteCourse>102</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
(105, 'Python', 3, 1, 3, '<Req><Dept>AI</Dept><Dept>CS</Dept></Req>')
(106, 'Intro to DB', 3, 1, 2, '<Req><PrerequisiteCourse>104</PrerequisiteCourse><PrerequisiteCourse>105</PrerequisiteCourse><Dept>CS</Dept><Dept>AI</Dept></Req>')
--- Table "Course_registration" ---
(82, 104, 95.0)
(82, 105, 92.0)
(82, 106, 59.0)

==== Test Stage 4 ====
  Functions to test: 
  - CloseDatabaseConnection
======================
[Operation Log] Successfully closed the database connection.
